plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
	id("java-library")
}

group = 'com.bucketstore'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(20)
	}
}

configurations
		{
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

// ✅ Q 클래스 생성 디렉토리
def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

// ✅ Q 클래스 sourceSets에 추가
sourceSets {
	main {
		java {
			srcDir querydslDir
		}
	}
}

// ✅ 컴파일 타스크에 Q 클래스 생성 디렉토리 지정
tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage' // JUnit 4 제거 (선택)
	}
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api:2.1.1"
}

tasks.named('test') {
	useJUnitPlatform()
}
